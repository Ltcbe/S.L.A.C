name: sncb-slac

networks:
  sncb_net:
    driver: bridge

volumes:
  dbdata:

services:
  db:
    image: mariadb:11
    restart: unless-stopped
    environment:
      MARIADB_DATABASE: ${MARIADB_DATABASE:-sncbslac}
      MARIADB_USER: ${MARIADB_USER:-app}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD:-change_me}
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD:-root_change_me}
      TZ: ${TZ:-Europe/Brussels}
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --skip-ssl
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - sncb_net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u", "${MARIADB_USER:-app}", "-p${MARIADB_PASSWORD:-change_me}"]
      interval: 15s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    restart: unless-stopped
    environment:
      TZ: ${TZ:-Europe/Brussels}
      DB_DSN: ${DB_DSN:-mysql+pymysql://app:change_me@db:3306/sncbslac}
      BACKEND_HOST: 0.0.0.0
      BACKEND_PORT: 8000
      BACKEND_LOG_LEVEL: ${LOG_LEVEL:-INFO}
      DEBUG: ${DEBUG:-false}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - sncb_net
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8000/healthz || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 6

  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    restart: unless-stopped
    environment:
      TZ: ${TZ:-Europe/Brussels}
      DB_DSN: ${DB_DSN:-mysql+pymysql://app:change_me@db:3306/sncbslac}
      FROM_STATION: ${FROM_STATION:-Tournai}
      TO_STATION: ${TO_STATION:-Bruxelles-Central}
      IRAIL_LANG: ${IRAIL_LANG:-fr}
      POLL_SECONDS: ${POLL_SECONDS:-120}
      USER_AGENT: ${USER_AGENT:-SNCB-Slac/1.0 (+https://sncb.terminalcommun.be)}
      DEBUG: ${DEBUG:-false}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - sncb_net

  frontend:
    # IMPORTANT : on laisse le contexte Ã  la racine "."
    # Le Dockerfile ci-dessous copie explicitement depuis frontend/
    build:
      context: .
      dockerfile: frontend/Dockerfile
    restart: unless-stopped
    environment:
      TZ: ${TZ:-Europe/Brussels}
      NODE_ENV: production
      PORT: 3000
      HOST: 0.0.0.0
      NEXT_PUBLIC_API_BASE_URL: https://sncb.terminalcommun.be/api
      BACKEND_INTERNAL_URL: http://backend:8000
    depends_on:
      backend:
        condition: service_started
    networks:
      - sncb_net
    healthcheck:
      test: ["CMD-SHELL", "IP=$(hostname -i | awk '{print $1}'); curl -fsS \"http://$IP:3000/health\" || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 6

# docker-compose.yml
# (pas de clé "version" — compose v2+ n'en a pas besoin)

services:
  db:
    image: mariadb:11
    container_name: sncb-db
    environment:
      MARIADB_ROOT_PASSWORD: root
      MARIADB_DATABASE: sncbslac
      MARIADB_USER: app
      MARIADB_PASSWORD: change_me
      TZ: Europe/Brussels
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - internal
    healthcheck:
      # Utilise le client mariadb (présent dans l'image) pour éviter mysqladmin
      test: ["CMD-SHELL", "echo 'SELECT 1' | mariadb -h127.0.0.1 -u\"$MARIADB_USER\" -p\"$MARIADB_PASSWORD\" \"$MARIADB_DATABASE\" >/dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  backend:
    build:
      context: .            # ← racine du repo (voit shared/, backend/)
      dockerfile: backend/Dockerfile
    container_name: sncb-backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      TZ: Europe/Brussels
      # DSN SQLAlchemy (utilisé par le code)
      DB_DSN: mysql+pymysql://app:change_me@db:3306/sncbslac
      # Variables "à l’ancienne" si ton code les lit encore
      MARIADB_HOST: db
      MARIADB_PORT: "3306"
      MARIADB_DATABASE: sncbslac
      MARIADB_USER: app
      MARIADB_PASSWORD: change_me
    expose:
      - "8000"
    ports:
      - "18000:8000"   # debug direct (facultatif)
    networks:
      - internal
      - proxy
    labels:
      # Route /api -> backend via Traefik (domaine public)
      traefik.enable: "true"
      traefik.docker.network: "dokploy-network"
      traefik.http.routers.sncb-backend.rule: "Host(`sncb.terminalcommun.be`) && PathPrefix(`/api`)"
      traefik.http.routers.sncb-backend.entrypoints: "websecure"
      traefik.http.routers.sncb-backend.tls: "true"
      traefik.http.services.sncb-backend.loadbalancer.server.port: "8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8000/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  worker:
    build:
      context: .            # ← racine du repo (voit shared/, worker/)
      dockerfile: worker/Dockerfile
    container_name: sncb-worker
    depends_on:
      db:
        condition: service_healthy
    environment:
      TZ: Europe/Brussels
      DB_DSN: mysql+pymysql://app:change_me@db:3306/sncbslac
      MARIADB_HOST: db
      MARIADB_PORT: "3306"
      MARIADB_DATABASE: sncbslac
      MARIADB_USER: app
      MARIADB_PASSWORD: change_me
      # iRail / collecte
      FROM_STATION: Tournai
      TO_STATION: Bruxelles-Central
      IRAIL_LANG: fr
      POLL_SECONDS: "120"
      USER_AGENT: "SNCB-Slac/1.0 (+https://sncb.terminalcommun.be)"
      # Logs / prod
      DEBUG: "false"
      LOG_LEVEL: INFO
    networks:
      - internal

  frontend:
    build:
      context: ./frontend   # ← si ton Dockerfile du front est dans frontend/
      dockerfile: Dockerfile
    container_name: sncb-frontend
    depends_on:
      backend:
        condition: service_healthy
    environment:
      TZ: Europe/Brussels
      NODE_ENV: production
      PORT: "3000"
      HOST: 0.0.0.0
      # Le front va appeler le backend public via Traefik :
      NEXT_PUBLIC_API_BASE_URL: "https://sncb.terminalcommun.be/api"
      # (en local debug sur port :18000, tu peux mettre NEXT_PUBLIC_API_BASE_URL=http://127.0.0.1:18000)
    expose:
      - "3000"
    ports:
      - "13000:3000"  # debug direct (facultatif)
    networks:
      - internal
      - proxy
    labels:
      # Route domaine -> frontend
      traefik.enable: "true"
      traefik.docker.network: "dokploy-network"
      traefik.http.routers.sncb-frontend.rule: "Host(`sncb.terminalcommun.be`)"
      traefik.http.routers.sncb-frontend.entrypoints: "websecure"
      traefik.http.routers.sncb-frontend.tls: "true"
      traefik.http.services.sncb-frontend.loadbalancer.server.port: "3000"
      # HTTP->HTTPS (si tu as le middleware côté file provider, sinon enlève ces 2 labels "web")
      traefik.http.routers.sncb-web.rule: "Host(`sncb.terminalcommun.be`)"
      traefik.http.routers.sncb-web.entrypoints: "web"
      traefik.http.routers.sncb-web.middlewares: "redirect-to-https@file"

volumes:
  dbdata:

networks:
  internal:
    driver: bridge
  proxy:
    external: true
    name: dokploy-network    # ← DOIT correspondre au réseau Traefik/Dokploy présent sur l’hôte

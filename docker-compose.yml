services:
  db:
    image: mariadb:11
    container_name: sncb-db
    environment:
      MARIADB_DATABASE: sncbslac
      MARIADB_USER: app
      MARIADB_PASSWORD: change_me
      MARIADB_ROOT_PASSWORD: change_me_root
      TZ: Europe/Brussels
    volumes:
      - dbdata:/var/lib/mysql
    networks: [sncb_net]
    healthcheck:
      test: ["CMD-SHELL", "mariadb-admin ping -uroot -p$MARIADB_ROOT_PASSWORD --silent"]
      interval: 5s
      timeout: 3s
      retries: 30

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: sncb-backend
    environment:
      TZ: Europe/Brussels
      DB_DSN: mysql+pymysql://app:change_me@db:3306/sncbslac
      BACKEND_HOST: 0.0.0.0
      BACKEND_PORT: 8000
      BACKEND_LOG_LEVEL: info
    depends_on:
      db:
        condition: service_healthy
    networks: [sncb_net]
    expose:
      - "8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8000/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12

  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    container_name: sncb-worker
    environment:
      TZ: Europe/Brussels
      DB_DSN: mysql+pymysql://app:change_me@db:3306/sncbslac
      FROM_STATION: Tournai
      TO_STATION: Bruxelles-Central
      IRAIL_LANG: fr
      POLL_SECONDS: "120"
      USER_AGENT: SNCB-Slac/1.0 (+https://sncb.terminalcommun.be)
      DEBUG: "false"
      LOG_LEVEL: INFO
    depends_on:
      db:
        condition: service_healthy
    networks: [sncb_net]
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: sncb-frontend
    environment:
      TZ: Europe/Brussels
      NODE_ENV: production
      HOST: 0.0.0.0
      PORT: "3000"
      # UtilisÃ© par le code Next pour appeler le backend via le proxy /api/* (Traefik -> frontend -> backend)
      NEXT_PUBLIC_API_BASE_URL: https://sncb.terminalcommun.be/api
    depends_on:
      backend:
        condition: service_healthy
    networks: [sncb_net]
    expose:
      - "3000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:3000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30

volumes:
  dbdata:

networks:
  sncb_net:
    driver: bridge
